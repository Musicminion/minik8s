name: image-build

on:
  push:
    branches:
      - master

env:
  DOCKER_REGISTRY: docker.io
  IMAGE1_NAME: musicminion/minik8s-gpu
  IMAGE1_TAG: latest
  IMAGE2_NAME: musicminion/func-base
  IMAGE2_TAG: latest

jobs:
  build-and-push-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE1_NAME }}:${{ env.IMAGE1_TAG }}
          platforms: linux/amd64,linux/arm64/v8

  build-and-push-2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}    
      - name: Build and push Docker image
        id: docker_build2
        uses: docker/build-push-action@v2
        with:
          # pkg/serveless/resources/Dockerfile
          context: ./pkg/serveless/resources
          file: ./pkg/serveless/resources/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE2_NAME }}:${{ env.IMAGE2_TAG }}
          platforms: linux/amd64,linux/arm64/v8